#+title: Configuration for Neovim
#+auto_tangle: t

* CONTENTS :toc:
- [[#lsp-configuration][LSP Configuration]]
- [[#treesitter][Treesitter]]
- [[#telescope][Telescope]]
- [[#colorscheme][Colorscheme]]

* LSP Configuration
#+BEGIN_SRC lua :tangle lsp.lua
local lsp = require('lsp-zero')
lsp.preset('recommended')

-- Fix Undefined global 'vim'
lsp.configure('lua_ls', {
    settings = { Lua = { diagnostics = { globals = { 'vim' } } } }
})

lsp.on_attach(function(client, bufnr)
  local opts = {buffer = bufnr, remap = false}
    vim.keymap.set("n", "gd", vim.lsp.buf.definition, opts)
    vim.keymap.set("n", "K", vim.lsp.buf.hover, opts)
    vim.keymap.set("n", "<leader>vd", vim.diagnostic.open_float, opts)
    vim.keymap.set("n", "[d", vim.diagnostic.goto_next, opts)
    vim.keymap.set("n", "]d", vim.diagnostic.goto_prev, opts)
end)

lsp.set_preferences({
    suggest_lsp_servers = false,
    setup_servers_on_start = true,
    configure_diagnostics = false,
    server_capabilities = true
})
lsp.setup()
#+END_SRC

* Treesitter
        additional_vim_regex_highlighting = false,
#+BEGIN_SRC lua :tangle treesitter.lua
require 'nvim-treesitter.configs'.setup {
    highlight = {
        enable = true,
        additional_vim_regex_highlighting = false,
    }
}
#+END_SRC

* Telescope
#+BEGIN_SRC lua :tangle telescope.lua
local builtin = require('telescope.builtin')
vim.keymap.set('n', '<leader>F', builtin.find_files, {})
vim.keymap.set('n', '<leader>th', builtin.colorscheme, {})
vim.keymap.set('n', '<leader>of', builtin.oldfiles, {})
--vim.keymap.set('n', ';r', builtin.live_grep, {})
vim.keymap.set('n', '<leader>bb', builtin.buffers, {})
vim.keymap.set('n', '<leader>hh', builtin.help_tags, {})
vim.keymap.set('n', '<leader>r', function()
    builtin.grep_string({ search = vim.fn.input("Grep > ") });
end)
#+END_SRC

* Colorscheme
#+BEGIN_SRC lua :tangle colors.lua
function ColorMyPencil(color)
    color = color or "gruvbox8_hard"
    vim.cmd.colorscheme(color)

	vim.api.nvim_set_hl(0, "Float", { bg = "none" })
	vim.api.nvim_set_hl(0, "NormalFloat", { bg = "none" })
    vim.api.nvim_set_hl(0, "Normal", { bg = "none" })
end

ColorMyPencil()
#+END_SRC
