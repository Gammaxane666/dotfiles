#+title: Plugins and Remaps
#+auto_tangle: t

* CONTENTS :toc:
- [[#general-config][General Config]]
- [[#keybindings][KeyBindings]]
- [[#plugins][Plugins]]

* General Config
#+BEGIN_SRC lua :tangle base.lua
local vim = vim
vim.cmd('autocmd!')

vim.opt.tabstop = 4
vim.opt.softtabstop = 4
vim.o.expandtab = 4
vim.opt.shiftwidth = 4

vim.opt.number = true
vim.opt.relativenumber = true
vim.opt.ignorecase = true
vim.opt.smartindent = true
vim.opt.hlsearch = false
vim.opt.incsearch = true

vim.opt.swapfile = false
vim.opt.undodir = os.getenv("HOME") .. "/.vi/undodir"
vim.opt.undofile = true

vim.opt.guicursor = ""
vim.opt.background = 'dark'
vim.opt.termguicolors = true
vim.opt.cursorline = true
vim.opt.scrolloff = 8
--vim.o.t_Co = 256
--vim.o.t_ut = true
vim.g.mapleader = ' '
vim.wo.wrap = false

vim.cmd('au TextYankPost * silent! lua vim.highlight.on_yank() {timeout=50}')
#+END_SRC

* KeyBindings
#+BEGIN_SRC lua :tangle remap.lua
local keymap = vim.keymap
local opts = { noremap = true, silent = true}
--Increment/Decrement
keymap.set('n', '+', '<C-a>')
keymap.set('n', '-', '<C-x>')


--Delete word backward
--keymap.set('n', 'dw', 'vb"_d')

--Select all
--keymap.set('n', '<C-a>', 'gg<S-v>G', opts)

keymap.set("x", "<leader>p", "\"_dp")

--Moving highlighted block
keymap.set('v', "J", ":m '>+1<CR>gv=gv")
keymap.set('v', "K", ":m '<-2<CR>gv=gv")

--kill buffer
keymap.set('n', '<leader>bk', ':bw<Return>', {silent = true})

--Split
keymap.set('n', '<leader>ss', ':split<Return><C-w>w', opts)
keymap.set('n', '<leader>sv', ':vsplit<Return><C-w>w', opts)

--Navigation
keymap.set('n', '<leader>h', '<C-w>h')
keymap.set('n', '<leader>j', '<C-w>j')
keymap.set('n', '<leader>k', '<C-w>k')
keymap.set('n', '<leader>l', '<C-w>l')

keymap.set('n', '<C-d>', '<C-d>zz')
keymap.set('n', '<C-u>', '<C-u>zz')

keymap.set("n", "<leader>s", [[:%s/\<<C-r><C-w>\>/<C-r><C-w>/gI<Left><Left><Left>]])
#+END_SRC

* Plugins
#+BEGIN_SRC lua :tangle plugins.lua
require('packer').startup(function(use)

    use 'wbthomason/packer.nvim'
    --use 'kyazdani42/nvim-web-devicons'
    use 'nvim-lua/popup.nvim'
    use 'nvim-lua/plenary.nvim'
    use 'nvim-telescope/telescope.nvim'
    use 'ThePrimeagen/vim-be-good'
    --use 'nvim-telescope/telescope-file-browser.nvim'
    --use 'jose-elias-alvarez/null-ls.nvim'

    --gruvbox
    use {
        'lifepillar/vim-gruvbox8',
        config = function ()
            vim.cmd('colorscheme gruvbox8')
            vim.cmd.gruvbox8_disable_background = true
        end
    }
    use 'jiangmiao/auto-pairs'
    use {
        'nvim-treesitter/nvim-treesitter',
        run = ':TSUpdate'
    }

    use {
        'VonHeikemen/lsp-zero.nvim',
        requires = {
            -- LSP Support
            { 'neovim/nvim-lspconfig' },
            { 'williamboman/mason.nvim' },
            { 'williamboman/mason-lspconfig.nvim' },

            -- Autocompletion
            { 'hrsh7th/nvim-cmp' },
            { 'hrsh7th/cmp-buffer' },
            { 'hrsh7th/cmp-path' },
            { 'saadparwaiz1/cmp_luasnip' },
            { 'hrsh7th/cmp-nvim-lsp' },
            { 'hrsh7th/cmp-nvim-lua' },

            -- Snippets
--            { 'L3MON4D3/LuaSnip' },
--            { 'rafamadriz/friendly-snippets' },
        }
    }

end)
#+END_SRC
